pipeline {
    agent any

    parameters {
        string(name: 'DOCKER_IMAGE', defaultValue: 'davidgallardo/nodejsapp', description: 'Docker image name')
        booleanParam(name: 'PUSH_DOCKER_IMAGE', defaultValue: false, description: 'Push Docker image to registry')
        booleanParam(name: 'DEPLOY', defaultValue: false, description: 'Deploy Docker image')
    }

    environment {     
        DOCKERHUB_CREDENTIALS= credentials('dockerhubcredentials')
        DOCKER_IMAGE_TAG = "${params.DOCKER_IMAGE}:${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    sh 'npm install'
                    echo 'Build Completed'
                }
            }
        }

        stage('Run Test') {
            steps {
                script {
                    echo 'Run Test'
                    echo 'Test Completed'
                }
            }
        }

        stage('Login to Docker Hub') {      	
            steps{                       	
                sh "echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin"
                echo 'Login Completed'      
            }           
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t $DOCKER_IMAGE_TAG ."
                    echo "Build docker image $DOCKER_IMAGE_TAG Completed"
                }
            }
        }

        stage('Push Image to Docker Hub') {         
            steps{                                            
                sh "docker push $DOCKER_IMAGE_TAG"           
                echo 'Push Image Completed'       
            }            
        }

        stage('Deploy') {
            when {
                expression { params.DEPLOY }
            }
            steps {
                script {
                    input "Deploy to production?"
                    sh "docker run -p 3000:3000 -d --name my-nodejs-app --rm $DOCKER_IMAGE_TAG"
                    echo 'Deploy Image Completed'
                }
            }
        }
    }

    post{
        always {  
            sh 'docker logout'     
        }      
    } 

    // post {
    //     success {
    //         echo 'Build, push, and deployment successful!'
    //     }
    //     failure {
    //         echo 'Build, push, or deployment failed!'
    //     }
    // }
}